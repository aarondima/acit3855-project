---
- name: Setup Environment for Kafka and Docker Services
  hosts: prod
  become: yes
  vars:
    project_root: "/home/{{ansible_user}}/acit3855-project"
    config_dir: "{{ project_root }}/configs"
    repo_url: "git@github.com:aarondima/acit3855-project.git"
    local_config_dir: "./configs/prod"
    remote_config_dir: "/home/azureuser/acit3855-project/configs"
    local_env_dir: "/mnt/c/Users/aaron/BCIT/Term 4/ACIT3855/project/.env"
    remote_env_dir: "/home/azureuser/acit3855-project/"

    

  tasks:
    - name: Update and upgrade packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc

    - name: Add Docker repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add current user to Docker group
      user:
        name: "{{ansible_user}}"
        groups: docker
        append: yes

    - name: Clone or update Git repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ project_root }}"
        key_file: "~/.ssh/acit3855-git"
        accept_hostkey: yes
        version: main
        update: yes
        force: yes

    - name: Ensure data directories exist
      file:
        path: "{{ project_root }}/data/{{ item }}"
        state: directory
        mode: "0777"
      loop:
        - kafka_data
        - processing
        - database

    - name: Create configs directory
      file:
        path: "{{ config_dir }}/prod"
        state: directory
        mode: "0755"

    - name: Copy configuration files to the VM
      copy:
        src: "{{ local_config_dir }}/"
        dest: "{{ remote_config_dir }}/prod/"
        owner: azureuser
        group: azureuser
        mode: "0644"

    - name: Copy env file to VM
      template:
        src: "{{ local_env_dir }}"
        dest: "{{ project_root }}/.env"
        mode: "0644"

    - name: Set permissions for repository
      file:
        path: "{{ project_root }}"
        mode: "0644"
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Stop existing Docker containers
      shell: |
        cd {{ project_root }}
        docker compose down -v
      ignore_errors: yes

    - name: Run services with Docker Compose
      shell: |
        cd {{ project_root }}
        docker compose up -d --build
      register: docker_output

    - name: Wait for Kafka to be healthy
      shell: |
        docker compose ps kafka | grep "healthy"
      args:
        chdir: "{{ project_root }}"
      register: result
      until: result.rc == 0
      retries: 30
      delay: 10

    - debug:
        var: docker_output.stderr_lines
      when: docker_output.stderr is defined