---
- name: Setup Environment for Kafka and Docker Services
  hosts: "{{ target_env | default('dev') }}"
  become: "{{ env == 'prod' }}"
  vars:
    project_root: "/home/{{ansible_user}}/acit3855-project"
    config_dir: "{{ project_root }}/configs"

  tasks:
    - name: Update and upgrade packages
      apt:
        update_cache: yes
        upgrade: yes
      when: env == "prod"

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
      when: env == "prod"

    - name: Add Docker GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | tee /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc
      when: env == "prod"

    - name: Add Docker repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: env == "prod"

    - name: Update package cache
      apt:
        update_cache: yes
      when: env == "prod"

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: env == "prod"

    - name: Add current user to Docker group
      user:
        name: "{{ansible_user}}"
        groups: docker
        append: yes
      when: env == "prod"

    - name: Clone or update Git repository
      git:
        repo: "git@github.com:aarondima/acit3855-project.git"
        dest: "{{ project_root }}"
        key_file: "~/.ssh/acit3855-git"
        accept_hostkey: yes
        version: main
        update: yes
        force: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      with_items:
        - "{{ project_root }}/logs"
        - "{{ project_root }}/data"

    - name: Template service configuration files
      template:
        src: "templates/{{ item }}.j2"
        dest: "{{ config_dir }}/{{ item }}"
        mode: '0644'
      with_items:
        - app_conf.yml
        - log_conf.yml

    - name: Stop existing Docker containers
      shell: |
        cd {{ project_root }}
        docker compose down
      ignore_errors: yes

    - name: Run services with Docker Compose
      shell: |
        cd {{ project_root }}
        docker compose up -d
      environment:
        KAFKA_URL: "{{ kafka_url }}"
        STORAGE_URL: "{{ storage_url }}"
        PROCESSING_URL: "{{ processing_url }}"
        RECEIVER_URL: "{{ receiver_url }}"
        ANALYZER_URL: "{{ analyzer_url }}"